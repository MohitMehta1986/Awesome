steps:

- name: 'gcr.io/cloud-builders/docker'
  args: [ 'build', '-t', 'gcr.io/$PROJECT_ID/petclinic-restservice', './petclinicbackend/customerservice' ]

- name: 'gcr.io/cloud-builders/docker'
  args: ["push", "gcr.io/$PROJECT_ID/petclinic-restservice"]
  
- name: 'gcr.io/cloud-builders/docker'
  args: [ 'build', '-t', 'gcr.io/$PROJECT_ID/petclinic-frontend', './petclinicfrontend' ]

- name: 'gcr.io/cloud-builders/docker'
  args: ["push", "gcr.io/$PROJECT_ID/petclinic-frontend"]

- name: 'gcr.io/cloud-builders/kubectl'
  args:
    - 'apply'
    - '-f'
    - 'deployment_final.yaml'

  env:
    - 'CLOUDSDK_COMPUTE_ZONE=asia-east1-a'
    - 'CLOUDSDK_CONTAINER_CLUSTER=pet-clinic-backend-cluster'
    
- name: 'gcr.io/cloud-builders/kubectl'
  args:
    - 'apply'
    - '-f'
    - 'service_backend.yaml'

  env:
    - 'CLOUDSDK_COMPUTE_ZONE=asia-east1-a'
    - 'CLOUDSDK_CONTAINER_CLUSTER=pet-clinic-backend-cluster'
    
- name: 'gcr.io/cloud-builders/gcloud'
  entrypoint: 'bash'
  args:
  - '-c'
  - |
    gcloud components install kubectl
    gcloud container clusters get-credentials pet-clinic-frontend-cluster --zone us-central1-a
    
- name: 'gcr.io/cloud-builders/kubectl'
  args:
    - 'apply'
    - '-f'
    - 'deployment_frontend.yaml'

  env:
    - 'CLOUDSDK_COMPUTE_ZONE=us-central1-a'
    - 'CLOUDSDK_CONTAINER_CLUSTER=pet-clinic-frontend-cluster'
    
- name: 'gcr.io/cloud-builders/kubectl'
  args:
    - 'apply'
    - '-f'
    - 'service_frontend.yaml'

  env:
    - 'CLOUDSDK_COMPUTE_ZONE=us-central1-a'
    - 'CLOUDSDK_CONTAINER_CLUSTER=pet-clinic-frontend-cluster'
    
images:
- 'gcr.io/$PROJECT_ID/petclinic-restservice'
- 'gcr.io/$PROJECT_ID/petclinic-frontend'
